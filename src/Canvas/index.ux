<template>
    <div class="doc-page">
        <div class="content" @longpress="scaleCanvas">
            <canvas class="new_canvas" id="newCanvas"></canvas>
            <canvas class="new_canvas" id="secondCanvas"></canvas>
            <input type="button" value="next" @click="nextCanvas"></input>
        </div>
    </div>
</template>

<style>
    .content {
        display:flex;
        flex-direction: column;
        justify-content:flex-start;
        align-content:flex-start;
        width: 100%;
        height:100%;
    }
    .new_canvas {
        height: 600px;
        width: 100%;
    }
</style>

<script>
    import prompt from '@system.prompt';
    import router from '@system.router';
    export default {
        private: {
            drawComplete: false,
            mycanvas:null,
            cx:null
        },
        onInit() {
            this.$page.setTitleBar({
                text: 'Canvas'
            })
        },
        onShow() {
            if(!this.drawComplete) {
                this.drawCanvas();
            }
            this.draw();
        },
        //第一个柱状图
        drawCanvas() {
            const canvas = this.$element('newCanvas'); //获取 canvas 组件
            this.mycanvas= canvas.getContext('2d'); //获取 canvas 绘图上下文
            this.line(100,80,100,480);
            this.line(700,80,700,480);
 
            //第二用for循环 画11条线   利用上面line的画线方法
            this.write("数量/个",80,60);
            this.write("月份",710,500);
            for(var i=0;i<11;i++){
                 this.line(100,80+i*40,700,80+i*40);
                 this.write(200-i*20,80,80+i*40)
 
            }
            this.wenrect();




            this.drawComplete = true;
         },
          line(aX,aY,bX,bY) {//开始和结束的横坐标  开始和结束的纵坐标
            this.mycanvas.beginPath();
            this.mycanvas.moveTo(aX,aY);
            this.mycanvas.lineTo(bX,bY);
            this.mycanvas.stroke();
          },
          rect(X,Y,width,height) {
            this.mycanvas.beginPath();
            this.mycanvas.fillStyle="#abcdef";
            this.mycanvas.fillRect(X,Y,width,height);
            // this.mycanvas.fill();
            this.mycanvas.closePath()
          },
          wenrect() {
            var arr = [60,90,150,130,170,190,125,175,155,165,155,145];
                
            for(var i=0;i<12;i++){
                var width=30;
                var height=arr[i]*2;
                var X=110+i*40+i*10;
                var Y=480-height;
                this.rect(X,Y,width,height);
                this.write((i+1)+"月",120+i*40+i*10,500)
            }
          },
          write(start,ox,oy) {
            this.mycanvas.beginPath();
            this.mycanvas.fillStyle = "black";
            this.mycanvas.fillText(start,ox,oy);
            this.mycanvas.closePath();
         },
         scaleCanvas(){
            // this.value="You"
            prompt.showToast({ message: "控件：放大canvas" });
            this.mycanvas.save();
            this.mycanvas.scale(2,2);
         },


        //第二个柱状图
         draw() {
            var canvas = this.$element('secondCanvas');
            this.cx = canvas.getContext('2d');
            //轴
            this.drawLine(100,480,700,480,0.5,'#999999');//(0,200),(300,200)
            this.drawLine(100,0,100,480,0.5,'#999999');//(50,0),(50,280)
            //y轴刻度
            for(var i=2;i<=10;i=i+2){
                this.cx.fillText(i,80,480-i*40);
                this.drawLine(100,480-i*40,700,480-i*40,0.5,'#f0f0f0');//刻度
            }
            //x轴
            var name=["a","b","c","d"];
            for(var i=1;i<=4;i++){
                this.cx.fillText(name[i-1],i*150+50,490);
            }
            //第一个线
            var color = ['#ffbfab','#fee17b','#effe87','#c2f3a1','#effe87'];
            var grades = [7,8,6,10,8];
            for(var i=150,j=0;j<5;j++,i=i+20){
                this.drawLine(i,480,i,this.g(grades[j]),20,color[j]); 
            }
            grades = [6,7,6,9,8];
            for(var i=300,j=0;j<5;j++,i=i+20){
                this.drawLine(i,480,i,this.g(grades[j]),20,color[j]); 
            }
            grades = [5,7,5,3,8];
            for(var i=450,j=0;j<5;j++,i=i+20){
                this.drawLine(i,480,i,this.g(grades[j]),20,color[j]); 
            }
            grades = [5,7,5,7,8];
            for(var i=600,j=0;j<5;j++,i=i+20){
                this.drawLine(i,480,i,this.g(grades[j]),20,color[j]); 
            }
		
         },
	     g(grade){
		    return 40*grade;
	     },
	
	     //画线
	     drawLine(b_x,b_y,e_x,e_y,width,color){
            this.cx.strokeStyle = color;//描边颜色
            this.cx.lineWidth = width;//线宽
            this.cx.beginPath();
            this.cx.moveTo(b_x,b_y);//起点
            this.cx.lineTo(e_x,e_y);//终点
            this.cx.closePath();
            this.cx.stroke();//描边
	     },

         nextCanvas(){
             router.push({
                 uri:'/NextCanvas'
             })
         }
    }
</script>